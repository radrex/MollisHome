@model ProductListVM

@{
  List<ProductVM> products = Model.Products.ToList();
  int increment = 0;
}

@{
  if (TempData.ContainsKey("ActionMessage"))
  {
    string message = TempData["ActionMessage"].ToString();
    if (message.Contains("doesn't exist."))
    {
      <div class="alert alert-danger" role="alert">
        <strong>@TempData["ActionMessage"]</strong>
      </div>
    }
    else
    {
      <div class="alert alert-success" role="alert">
        <strong>@TempData["ActionMessage"]</strong>
      </div>
    }
  }
}

@for (int i = 0; i < products.Count(); i += 3)
{
  <div class="card-deck">
    @if (i + 3 < products.Count())
    {
      increment = 3;
    }
    else
    {
      increment = products.Count() - i;
    }

    @for (int j = i; j < i + increment; j++)
    {
    <div class="card">
      <img class="card-img-top" src="@products[j].ImgUrl" alt="@(products[j].Category != null ? products[j].Category.Name : "Продуктът без категория")">
      <div class="card-body">
        <h3>@products[j].Name</h3>
        <h5>@(products[j].Category != null ? products[j].Category.Name : "Продуктът няма категория")</h5>
        <h5 class="card-title"></h5>
        <p class="card-text">@products[j].Description</p>

        <h5 class="card-title">Материали:</h5>
        <ul>
          @foreach (var material in products[j].Materials)
          {
            <li>@material.Material.Name - @material.Material.Percentage</li>
          }
        </ul>
      </div>
      <div class="card-footer">
        @{
          decimal total = 0.0M;
          string accordionId = $"acc{j}";

          bool ariaExpanded = true;
          string show = "show";
        }

        <div class="accordion mb-3" id="@accordionId">
          @foreach (var stock in products[j].Stock)
          {
            string key = $"collapse{stock.Product.Id}{stock.Color.Id}{stock.Gender.Id}{@stock.Size.Id}";
            string headingKey = $"heading{stock.Product.Id}{stock.Color.Id}{stock.Gender.Id}{@stock.Size.Id}";

            <div class="card">
              <div class="card-header" id="@headingKey">
                <h5 class="mb-0">
                  <button class="btn" data-toggle="collapse" data-target="#@key" aria-expanded="@ariaExpanded" aria-controls="@key">
                    @stock.Color.Name (@stock.Color.HexValue) - @stock.Size.Name - @stock.Gender.Name
                  </button>
                </h5>
              </div>

              <div id="@key" class="collapse @show" aria-labelledby="@headingKey" data-parent="#@accordionId">
                <div class="card-body">
                  <ul class="text-muted">
                    <li>Количество: @stock.Quantity</li>
                    <li>Цена: @stock.Price лв.</li>
                    <li>Отстъпка: @stock.DiscountPercentage%</li>
                    @{
                      decimal sum = stock.Quantity * (stock.Price *= ((100 - stock.DiscountPercentage) / 100M));
                      total += sum;
                    }
                    <li><strong>Сума: @sum.ToString("F2") лв.</strong></li>
                  </ul>
                </div>
              </div>
            </div>

            ariaExpanded = false;
            show = "";
          }

          <div class="card">
            <div class="card-header">
              <h4 class="text-center">Общо: @total.ToString("F2") лв.</h4>
            </div>
          </div>
        </div>

        <div class="container">
          <div class="row justify-content-around">
            <partial name="_DetailsModal" model="products[j]" />
            <a class="btn btn-outline-success" asp-area="Dashboard" asp-controller="Products" asp-action="Edit" asp-route-id="@products[j].Id">Промени</a>
            <partial name="_DeleteModalWarning" model="products[j]" />
          </div>
        </div>

      </div>
    </div>
    }
  </div>
}

<nav class="mt-3">
  <ul class="pagination justify-content-center">
    @if (this.Model.CurrentPage == 1)
    {
      <li class="page-item disabled">
        <a class="page-link" href="#" tabindex="-1">Назад</a>
      </li>
    }
    else
    {
      <li class="page-item">
        <a class="page-link" asp-route-page="@(this.Model.CurrentPage - 1)">Назад</a>
      </li>
    }

    @for (int i = 1; i <= this.Model.PagesCount; i++)
    {
      string active = i == this.Model.CurrentPage ? "active" : string.Empty;
      <li class="page-item @active">
        <a class="page-link" asp-route-page="@i">@i</a>
      </li>
    }

    @if (this.Model.CurrentPage == this.Model.PagesCount)
    {
      <li class="page-item disabled">
        <a class="page-link" href="#" tabindex="-1">Напред</a>
      </li>
    }
    else
    {
      <li class="page-item">
        <a class="page-link" asp-route-page="@(this.Model.CurrentPage + 1)">Напред</a>
      </li>
    }
  </ul>
</nav>
